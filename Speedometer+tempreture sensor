#include <LiquidCrystal.h>
#include <dht.h>
#define reed A0
#define DHT11_PIN 7
const int FSR_PIN = A1; 

dht DHT;

int reedVal;
int maxDebounceTicks = 100;
int currentDebounceTicks;
int time = 0;
float radius = 0.00034;
float circumference;
float velocity = 0.00;
float distance = 0.00;
const float VCC = 4.98;
const float R_DIV = 3230.0;

LiquidCrystal lcd(12, 11, 5, 4, 3, 2);

void setup() {
  pinMode(FSR_PIN, INPUT);
  lcd.begin(8, 2);
  Serial.begin(9600);
 pinMode(8, OUTPUT);  
pinMode(9, OUTPUT);  
pinMode(10, OUTPUT);  
  


  currentDebounceTicks = maxDebounceTicks;
  circumference = 2 * 3.14 * radius;

  pinMode(reed, INPUT);

  cli();
  TCCR1A = 0;
  TCCR1B = 0;
  TCNT1  = 0;
  OCR1A = 1999;
  TCCR1B |= (1 << WGM12);
  TCCR1B |= (1 << CS11);
   TIMSK1 |= (1 << OCIE1A);
  sei();
}

void loop() {
   displayText();
   force();
   temp();
}

ISR(TIMER1_COMPA_vect) {
  reedVal = digitalRead(reed);
  if (reedVal) {
  
    if (currentDebounceTicks == 0) {
    
      velocity = circumference/(float(time)/1000/3600);
      time = 0;
      currentDebounceTicks = maxDebounceTicks;
      distance = distance + circumference;

    } else {
      if (currentDebounceTicks > 0) {
        currentDebounceTicks -= 1;
      }
    }
  } else {
    if (currentDebounceTicks > 0) {
      currentDebounceTicks -= 1;
    }
  }

  if (time > 2000) {
  
    velocity = 0;
  } else {
    time += 1;
  }
}

void displayText(){
  lcd.clear();

  lcd.setCursor(0, 0);
  lcd.print(int(velocity));
  lcd.print(" km/h");

  lcd.setCursor(0, 1);
  if (distance > 1) {
    lcd.print(distance);
    lcd.print(" km");
  } else {
    lcd.print(int(distance * 1000));
    lcd.print(" m");
  }

  Serial.println(velocity);
  Serial.println(distance);
if (velocity >=20){
   digitalWrite(10, HIGH);
  }
  else {
      digitalWrite(10, LOW);
  }
  if (velocity >=30){
   digitalWrite(9, HIGH);
  }
  else {
      digitalWrite(9, LOW);
  }
  if (velocity >=40){
   digitalWrite(8, HIGH);
  }
  else {
      digitalWrite(8, LOW);
  }
}

void force(){
  int fsrADC = analogRead(FSR_PIN);

  if (fsrADC != 0) 
  {

    float fsrV = fsrADC * VCC / 1023.0;
  
    float fsrR = R_DIV * (VCC / fsrV - 1.0);
    Serial.println("Resistance: " + String(fsrR) + " ohms");
 
    float force;
    float fsrG = 1.0 / fsrR; 
  
    if (fsrR <= 600) 
      force = (fsrG - 0.00075) / 0.00000032639;
    else
      force =  fsrG / 0.000000642857;
    Serial.println("Force: " + String(force) + " g");
    Serial.println();

    delay(500);
  }
  else
  {
   
  }
}
void temp(){
    
  int chk = DHT.read11(DHT11_PIN);
  lcd.setCursor(6,0); 
  lcd.print("T: ");
  lcd.print(DHT.temperature);
  lcd.print((char)223);
  lcd.print("C");
  lcd.setCursor(6,1);
  lcd.print("H: ");
  lcd.print(DHT.humidity);
  lcd.print("%");
  delay(5000);
}



  
