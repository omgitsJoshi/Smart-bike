#include <LiquidCrystal.h>
#include <Wire.h>
#include <dht.h>
#define reed A0
#define DHT11_PIN 6
#define fsrPin  A1 

dht DHT;
   
int fsrReading;  // force reading analog 1023 -0
int fsrVoltage ; // mV storage

int motorDrive = 7;

int reedVal;  // reed switch vaule
int ReedCounterMax = 100; //minium  time for one rotation in ms for debouncing
int currentReedCount; 

int time = 0;

float radius = 0.00032;  // wheel size of 13 inches in km 
float circumference;  // size of the wheel
float velocity = 0.00;
float distance = 0.00;


LiquidCrystal lcd(12, 11, 5, 4, 3, 2); //initialize LCD with pins

void setup() {
   lcd.begin(8, 2);
   Serial.begin(9600);
   
   Wire.begin(8);  
   Wire.onReceive(receiveEvent);  // register as an event when data recieved from master
  
   pinMode(reed, INPUT);
   pinMode(8, OUTPUT);  
   pinMode(9, OUTPUT);  
   pinMode(10, OUTPUT);  
   pinMode(motorDrive, OUTPUT); 

  currentReedCount = ReedCounterMax ; 
  circumference = 2 * 3.14 * radius; // calculate circumference of bike wheel
  

 // set timer to 1Khz intervals
  cli(); //stop interrupts
  TCCR1A = 0; //  set this register to 0
  TCCR1B = 0; // set register to  0
  TCNT1  = 0; // set register to 0
   
  OCR1A = 1999;   // set timer count for  1 khz increments  timer count calulated at 1999=required delay/clock *-1
  TCCR1B |= (1 << WGM12);   //turn on ctc mode to allow other devices to run 
  TCCR1B |= (1 << CS11); // set 8 bit prescaler. timer to be clocked at desired rate
  TIMSK1 |= (1 << OCIE1A); //enable timer compare intterupt
  sei(); // end timer setup
}

void loop() {
   displayText();  //display text to lcd and serial monitor
   force();  // detect when assistance is needed
   temp();  // print temp and humidity to lcd and serial
 

}

ISR(TIMER1_COMPA_vect) {  // intterupt at 1kHZ to measure reed switch
  reedVal = digitalRead(reed);  // get the value of A0
  if (reedVal) // if the reed is closed
  { 
  
  if (currentReedCount == 0)//minimun time between pulses has passed
  {  
   
      velocity = circumference/(float(time)/1000/3600); // speed = distance / time    (/1000 for km / 3600 seconds)
      time = 0;  // reset the timer
      
      currentReedCount = ReedCounterMax ; //reset the reed counter
      
      distance = distance + circumference;  // distance calculation for wheel
      

   } 
  else // if reed counter is open
    {  
  if (currentReedCount > 0) // dont let reed counter go negative
      { 
        currentReedCount -= 1;  // decrement reed counter 
      }
    }
 }
 else
  {
  if (currentReedCount > 0) 
    { 
      currentReedCount -= 1;
    }
  }

  if (time > 2000) 
  { 
  
    velocity = 0;  //set speed to 0 if nothing detected for more than 2 seconds 
  }
  else 
  {
    time += 1;  //increment the timer
  }
}


void displayText(){
    lcd.clear();

    lcd.setCursor(0, 0);
    lcd.print(int(velocity));
    lcd.print(" km/h");

    lcd.setCursor(0, 1);
  if (distance > 1)  // radius of wheel is 0.00034 so when circumference hits 1 its the same as 1000m 
  {
    lcd.print(distance);
    lcd.print(" km");
  } 
  else {
    lcd.print(int(distance * 1000));  // multiply for km calulations
    lcd.print(" m");
  }

    Serial.print("speed  ");
    Serial.print(int(velocity));
    Serial.print(" km/h");
    Serial.print("\n");
  
  if (distance >1)
   {
    Serial.print(distance );
    Serial.print("km");
    Serial.print("\n");
   }
    else
    {
   
    Serial.print("distance  ");
    Serial.print(int(distance * 1000));
    Serial.print(" M ");
    Serial.print("\n");
    }
    
 if (velocity >=15)
  {
   digitalWrite(8, HIGH);
  }
  else
  {
      digitalWrite(8, LOW);
  }
  if (velocity >=25)
  {
   digitalWrite(9, HIGH);
  }
  else 
  {
      digitalWrite(9, LOW);
  }
  if (velocity >=40)
  {
   digitalWrite(10, HIGH);
  }
  else 
  {
      digitalWrite(10, LOW);
  }

}


void force(){
    fsrReading = analogRead(fsrPin);  //10g to 10000g 
 

   
   
  //Serial.println(fsrReading);
    fsrVoltage =  map(fsrReading, 0, 1023, 0, 5000);  // analog reading from 0 -1023 mapped to 0-5v (5000mv)
    Serial.print("Voltage reading in mV = ");
    Serial.println(fsrVoltage);  
  

  if (fsrReading >300) 
  {
    
    digitalWrite(motorDrive, HIGH); 
    Serial.println("electrical assistance ON");



  }
  else  
  {
    digitalWrite(motorDrive, LOW);  
  }
  }
       


void temp(){
   
    float t = DHT.temperature; // Gets the values of the temperature
    float h = DHT.humidity; // Gets the values of the humidity
  
    int chk = DHT.read11(DHT11_PIN);
    lcd.setCursor(6,0); 
    lcd.print("T ");


   Serial.print("TEMP  ");
   Serial.print(DHT.temperature);
   Serial.print("C");
   Serial.print("\n");
   
   Serial.print("humidity  ");
   Serial.print(DHT.humidity);
   Serial.print("% ");
   Serial.print("\n");
   Serial.print("\n");
 
 
  
  lcd.print(DHT.temperature);
  lcd.print((char)223);  
  lcd.print(" C");
  lcd.setCursor(6,1);
  lcd.print(" H ");
  lcd.print(DHT.humidity);
  lcd.print("%");
  delay(2000);
}
